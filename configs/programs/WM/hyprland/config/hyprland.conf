# vim: set textwidth=0:
monitor = , preferred, auto, 1

$terminal = foot
$waybar="waybar --config $HOME/.config/shitbox/configs/programs/waybar/config/hyprland.json --style $HOME/.config/shitbox/configs/programs/waybar/config/style.css"

#execs{{{
    # exec-once = systemctl --user start hyprpolkitagent & swww-daemon & swaync & waybar & dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP & ~/.config/hypr/notes/notes.sh
    # exec-once = systemctl --user start hyprpolkitagent & swww-daemon & swaync & waybar & dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
    exec-once = $HOME/.config/shitbox/scripts/startup.sh $waybar

    # exec-once = [workspace special:magic silent; float; size 90% 10%; center] sleep 300 && $terminal -e java -jar ~/Sheepit/sheepitclient.jar -ui oneLine
    # exec-once = nicotine --headless
#execs}}}

#envs{{{
    # env = XCURSOR_SIZE,24
    # env = HYPRCURSOR_SIZE,24
    # env = QT_QPA_PLATFORMTHEME,qt6ct
    # env = XCURSOR_THEME,ArchCursorTheme
    env = GTK_THEME,Sweet-Dark
    # env = HYPRLAND_LOG_WLR,1
    env = XDG_CURRENT_DESKTOP,Hyprland
#envs}}}

general { # {{{
    gaps_in = 1 #5
    gaps_out = 0 #20

    border_size = 2 #2

    col.active_border = rgb(ff00ff)
    col.inactive_border = rgb(850045)

    resize_on_border = true #false 

    allow_tearing = false

    snap {
        enabled = true
    }
} # }}}

decoration { # {{{
    rounding = 9

    active_opacity = 1.0
    inactive_opacity = 1.0

    shadow { # {{{
        enabled = false
        range = 20
        render_power = 2
        ignore_window = 1
        # color = rgba(1a1a1aee)
        color=0xFFFA0DED
        color_inactive=0xFF3292F3
    } # }}}

    blur { # {{{
        # enabled = true
        enabled = false
        # size = 3
        size = 3
        # passes = 1
        passes = 3

        # vibrancy = 0.1696
        vibrancy = 0.1696
    } # }}}
} # }}}

animations { # {{{
    enabled = false
    first_launch_animation = false

    bezier = myBezier, 0.05, 0.9, 0.1, 1.05
    bezier = myElasticBezier, 0.68, -0.55, 0.27, 1.55
    animation = windows, 1, 3, myElasticBezier
    animation = border, 1, 10, default
    animation = borderangle, 1, 8, default
    animation = fade, 1, 7, default
    animation = workspaces, 1, 3, myElasticBezier, slidevert
} # }}}

dwindle { # {{{
    pseudotile = true # Master switch for pseudotiling. Enabling is bound to mainMod + P in the keybinds section below
    preserve_split = true # You probably want this
} # }}}

misc { # {{{
    force_default_wallpaper = 0 # Set to 0 or 1 to disable the anime mascot wallpapers
    disable_hyprland_logo = true # If true disables the random hyprland logo / anime girl background. :(
    middle_click_paste = false
    enable_swallow = true
    enable_anr_dialog = false
} # }}}

ecosystem {
    no_update_news = true
    no_donation_nag = true
}

input { # {{{
    kb_layout = us
    kb_variant =
    kb_model =
    kb_options = Alt_R:Escape
    kb_rules =

    follow_mouse = 1

    sensitivity = 0 # -1.0 - 1.0, 0 means no modification.

} # }}}

gestures { # {{{
    workspace_swipe = false
} # }}}

$mainMod = SUPER # Sets "Windows" key as main modifier

# keybinds{{{
    # execution{{{
        # terminal{{{
            bind = $mainMod, Q, exec, [fullscreenstate, 2, 2] $terminal -e $HOME/.config/hypr/scripts/autostart-tmux.sh
            bind = $mainMod SHIFT, Q, exec, [float; size 90% 90%; center] $terminal
            # bind = $mainMod, Q, exec, [fullscreenstate, 2, 2] $terminal -e zellij --layout startup
            # bind = $mainMod SHIFT, Q, exec, [float; size 90% 90%; center] $terminal -e zellij --layout startup
        # terminal}}}
        # email{{{
            bind = $mainMod, E, exec, $HOME/.config/hypr/scripts/tmuxorterminal.sh $terminal neomutt
            bind = $mainMod SHIFT, E, exec, [float; size 90% 90%; center] $terminal -e neomutt
        # email}}}
        # file manager{{{
            bind = $mainMod, F, submap, file_manager
            submap = file_manager
                bind =, Y, exec, $terminal -e yazi
                bind =, Y, submap, reset
                bind =, D, exec, dolphin
                bind =, D, submap, reset
                bind =, F, submap, float_file_manager
                bind =, F, submap, reset
                bind =,catchall,submap,reset
            submap = reset
            submap = float_file_manager
                bind =, Y, exec, [float; size 90% 90%; center] $terminal -e yazi
                bind =, Y, submap, reset
                bind =, D, exec, [float; size 90% 90%; center] dolphin
                bind =, D, submap, reset
                bind =,catchall,submap,reset
            submap = reset
        # file manager}}}
        # editor{{{
            bind = $mainMod, N, exec, $terminal -e nvim
            bind = $mainMod SHIFT, N, exec,[float; size 90% 90%; center] $terminal -e nvim
        # editor}}}
        # launchers{{{
            bind = $mainMod, R, exec, $HOME/.config/shitbox/scripts/menu.sh $terminal
            # bind = $mainMod SHIFT, R, exec, python ~/.config/wofi/alternate_launch.py
            bind = $mainMod SHIFT, R, exec, $HOME/.config/shitbox/configs/programs/emulators/qemu/qemu-launcher/qemu-launcher
            bind = ALT, F4, exec, $HOME/.config/hypr/scripts/shutdown.sh
            bind = $mainMod, M, exec, BEMOJI_PICKER_CMD="fuzzel -d -l 30 --show-actions --tabs=4 -b 110015e6 -s 420080ff -S ff00ffff -C ff00cfff -r 10 -f 'Hack Nerd Font:size=15' -D yes -w 40" bemoji -n
        # launchers}}}
        # music{{{
            bind = $mainMod, backspace, submap, music_control
            submap = music_control
                #mpc
                    bind =, space, exec, mpc toggle
                    binde =, equal, exec, mpc volume +1 && swaync-client --hide-latest && notify-send "$(mpc volume)"
                    binde =, minus, exec, mpc volume -1 && swaync-client --hide-latest &&  notify-send "$(mpc volume)"
                    binde =, period, exec, mpc next && swaync-client --hide-latest && notify-send "$(mpc status)"
                    binde =, comma, exec, mpc prev && swaync-client --hide-latest && notify-send "$(mpc status)"
                    binde =, r, exec, mpc repeat && swaync-client --hide-latest && notify-send "$(mpc status)"
                    binde =, y, exec, mpc single && swaync-client --hide-latest && notify-send "$(mpc status)"
                    binde =, z, exec, mpc random && swaync-client --hide-latest && notify-send "$(mpc status)"
                    bind =, Shift_L, submap, enter_shift_mode_mpc
                #mpc
                bind =, n, exec, [float; size 80% 80%; center] $HOME/.config/hypr/scripts/tmuxorterminal.sh $terminal ncmpcpp
                bind =, n, submap, reset
                bind =, c, exec, [float; size 80% 80%; center] $HOME/.config/hypr/scripts/tmuxorterminal.sh $terminal cava $HOME/.config/kitty/kitty_1_pts.conf
                bind =, c, submap, reset
                bind =, catchall, submap, reset
            submap = reset
                submap = enter_shift_mode_mpc
                    binde =, r, exec, mpc consume && swaync-client --hide-latest && notify-send "$(mpc status)"
                    bind =, catchall, submap, reset
                submap = reset

        # music}}}
        # audio{{{
            binde = $mainMod, equal, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 1%+
            binde = $mainMod, minus, exec,  wpctl set-volume @DEFAULT_AUDIO_SINK@ 1%-
        # audio}}}
    # execution}}}
    # navigation{{{
        # window navigation{{{
            binde = $mainMod, h, movefocus, l
            binde = $mainMod, l, movefocus, r
            binde = $mainMod, k, movefocus, u
            binde = $mainMod, j, movefocus, d
        # window navigation}}}
        # window move{{{
            bindm = $mainMod, mouse:272, movewindow # left mouse button
            bindm = $mainMod, mouse:273, resizewindow # right mouse button
        # window move}}}
        # window edit{{{
            bind = $mainMod SHIFT, escape, killactive,
            bind = $mainMod SHIFT, V, togglefloating,
            # bind = $mainMod, P, pseudo # dwindle
            bind = $mainMod SHIFT, p, pin
            bind = $mainMod, P, exec, wl-copy $(hyprpicker)
            bind = $mainMod SHIFT, J, togglesplit # dwindle
            # fullscreen stuff{{{
                bind = $mainMod, F11, submap, enter_fullscreenstate_mode
                submap = enter_fullscreenstate_mode
                    bind =, 0, submap, fullscreenstate_mode_0
                    bind =, 1, submap, fullscreenstate_mode_1
                    bind =, 2, submap, fullscreenstate_mode_2
                    bind =, 3, submap, fullscreenstate_mode_3
                    bind =, catchall, submap, reset
                submap = reset
                submap = fullscreenstate_mode_0
                    bind =, 0, fullscreenstate, 0 0
                    bind =, 0, submap, reset
                    bind =, 1, fullscreenstate, 0 1
                    bind =, 1, submap, reset
                    bind =, 2, fullscreenstate, 0 2
                    bind =, 2, submap, reset
                    bind =, 3, fullscreenstate, 0 3
                    bind =, 3, submap, reset
                    bind =, catchall, submap, reset
                submap = reset
                submap = fullscreenstate_mode_1
                   bind =, 0, fullscreenstate, 1 0
                   bind =, 0, submap, reset
                   bind =, 1, fullscreenstate, 1 1
                   bind =, 1, submap, reset
                   bind =, 2, fullscreenstate, 1 2
                   bind =, 2, submap, reset
                   bind =, 3, fullscreenstate, 1 3
                   bind =, 3, submap, reset
                   bind =, catchall, submap, reset
                submap = reset
                submap = fullscreenstate_mode_2
                   bind =, 0, fullscreenstate, 2 0
                   bind =, 0, submap, reset
                   bind =, 1, fullscreenstate, 2 1
                   bind =, 1, submap, reset
                   bind =, 2, fullscreenstate, 2 2
                   bind =, 2, submap, reset
                   bind =, 3, fullscreenstate, 2 3
                   bind =, 3, submap, reset
                   bind =, catchall, submap, reset
                submap = reset
                submap = fullscreenstate_mode_3
                   bind =, 0, fullscreenstate, 3 0
                   bind =, 0, submap, reset
                   bind =, 1, fullscreenstate, 3 1
                   bind =, 1, submap, reset
                   bind =, 2, fullscreenstate, 3 2
                   bind =, 2, submap, reset
                   bind =, 3, fullscreenstate, 3 3
                   bind =, 3, submap, reset
                   bind =, catchall, submap, reset
                submap = reset
            # fullscreen stuff}}}
        # window edit}}}
        # workspace nav{{{
            bind = $mainMod, 1, workspace, 1
            bind = $mainMod, 2, workspace, 2
            bind = $mainMod, 3, workspace, 3
            bind = $mainMod, 4, workspace, 4
            bind = $mainMod, 5, workspace, 5
            bind = $mainMod, 6, workspace, 6
            bind = $mainMod, 7, workspace, 7
            bind = $mainMod, 8, workspace, 8
            bind = $mainMod, 9, workspace, 9
            bind = $mainMod, 0, workspace, 10
            bind = $mainMod, right, workspace, e+1
            bind = $mainMod, left, workspace, e-1
            # bind = $mainMod, tab, hyprexpo:expo, toggle
        # workspace nav}}}
        # workspace move{{{
            bind = $mainMod SHIFT, 1, movetoworkspace, 1
            bind = $mainMod SHIFT, 2, movetoworkspace, 2
            bind = $mainMod SHIFT, 3, movetoworkspace, 3
            bind = $mainMod SHIFT, 4, movetoworkspace, 4
            bind = $mainMod SHIFT, 5, movetoworkspace, 5
            bind = $mainMod SHIFT, 6, movetoworkspace, 6
            bind = $mainMod SHIFT, 7, movetoworkspace, 7
            bind = $mainMod SHIFT, 8, movetoworkspace, 8
            bind = $mainMod SHIFT, 9, movetoworkspace, 9
            bind = $mainMod SHIFT, 0, movetoworkspace, 10
        # workspace move}}}
        # scratchpad{{{
            bind = $mainMod, S, togglespecialworkspace, magic
            bind = $mainMod SHIFT, S, movetoworkspace, special:magic
        # scratchpad}}}
        # taskbar{{{
            bind = $mainMod, T, submap, taskbar
            submap = taskbar
                bind =, r, exec, pkill waybar; eval "$waybar"
                bind =, t, exec, pgrep waybar > /dev/null && pkill waybar || eval "$waybar"
                bind =, catchall, submap, reset
            submap = reset
        # taskbar}}}
    # navigation}}}

    # bind = $mainMod, M, exit,
    bind = $mainMod, V, exec, $HOME/.config/shitbox/scripts/globalPaste.sh
    # bind = $mainMod, Print, exec, flameshot gui
    bind = $mainMod, Print, exec, $HOME/.config/hypr/scripts/screenshot.sh
    bind = $mainMod SHIFT, Print, exec, IMG=~/Pictures/$(date +%Y-%m-%d_%H-%m-%s).png && grim -g "$(slurp)" $IMG && wl-copy < $IMG
# keybinds}}}

#window rules{{{
    windowrulev2 = float, class:(vesktop)
    windowrulev2 = size 90% 90%, class:(vesktop)
    windowrulev2 = center, class:(vesktop)
    windowrulev2 = float, class:(discord)
    windowrulev2 = size 90% 90%, class:(discord)
    windowrulev2 = center, class:(discord)
    windowrulev2 = float, class:(Element)
    windowrulev2 = size 90% 90%, class:(Element)
    windowrulev2 = center, class:(Element)
    windowrulev2 = float, class:(legcord)
    windowrulev2 = size 90% 90%, class:(legcord)
    windowrulev2 = center, class:(legcord)
    windowrulev2 = float, class:(org.keepassxc.KeePassXC)
    windowrulev2 = size 90% 90%, class:(zenity)
    windowrulev2 = center, class:(zenity)
    windowrulev2 = float, class:(zenity)

    # windowrulev2 = size 90% 90%, title:(discordo)
    # windowrulev2 = center, title:(discordo)
    # windowrulev2 = float, size 90% 90%, center, class:^(discord)$

    # Example windowrule v2
    # windowrulev2 = float,size [90%] [90%], class:^(discord)$,title:^(Discord)$

    windowrulev2 = suppressevent maximize, class:.* # You'll probably like this.
#window rules}}}
